{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  class: \"columns is-multiline\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"column is-12\"\n}, [/*#__PURE__*/_createElementVNode(\"h1\", {\n  class: \"title\"\n}, \"Leads\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"column is-12\"\n};\nconst _hoisted_5 = {\n  class: \"table\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Company\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Contact person\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Status\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"table\", _hoisted_5, [_hoisted_6, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.leads, lead => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: lead.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(lead.company), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(lead.contact_person), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(lead.status), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","_Fragment","_renderList","$data","leads","lead","key","id","_toDisplayString","company","contact_person","status"],"sources":["D:\\Courses\\web-programming-course\\homeworks\\6-crm\\crm_vue\\src\\views\\dashboard\\Leads.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Leads</h1>\r\n      </div>\r\n\r\n      <div class=\"column is-12\">\r\n        <table class=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Company</th>\r\n              <th>Contact person</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr v-for=\"lead in leads\" :key=\"lead.id\">\r\n              <td>{{ lead.company }}</td>\r\n              <td>{{ lead.contact_person }}</td>\r\n              <td>{{ lead.status }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Leads',\r\n  data() {\r\n    return {\r\n      leads: []\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getLeads()\r\n  },\r\n  methods: {\r\n    async getLeads() {\r\n      this.$store.commit('setIsLoading', true)\r\n      \r\n      axios.get('api/v1/leads/').then(response => {\r\n        this.leads = response.data\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n\r\n      this.$store.commit('setIsLoading', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"mappings":";;EACOA,KAAK,EAAC;AAAW;;EACfA,KAAK,EAAC;AAAsB;gCAC/BC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACvBC,mBAAA,CAA4B;EAAxBD,KAAK,EAAC;AAAO,GAAC,OAAK,E;;EAGpBA,KAAK,EAAC;AAAc;;EAChBA,KAAK,EAAC;AAAO;gCAClBC,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAuB,YAAnB,gBAAc,G,aAClBA,mBAAA,CAAe,YAAX,QAAM,E;;;uBAZtBC,mBAAA,CA0BM,OA1BNC,UA0BM,GAzBJF,mBAAA,CAwBM,OAxBNG,UAwBM,GAvBJC,UAEM,EAENJ,mBAAA,CAkBM,OAlBNK,UAkBM,GAjBJL,mBAAA,CAgBQ,SAhBRM,UAgBQ,GAfNC,UAMQ,EAERP,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKO,SAAA,QAAAC,WAAA,CAJcC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfX,mBAAA,CAIK;MAJsBY,GAAG,EAAED,IAAI,CAACE;QACnCd,mBAAA,CAA2B,YAAAe,gBAAA,CAApBH,IAAI,CAACI,OAAO,kBACnBhB,mBAAA,CAAkC,YAAAe,gBAAA,CAA3BH,IAAI,CAACK,cAAc,kBAC1BjB,mBAAA,CAA0B,YAAAe,gBAAA,CAAnBH,IAAI,CAACM,MAAM,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}