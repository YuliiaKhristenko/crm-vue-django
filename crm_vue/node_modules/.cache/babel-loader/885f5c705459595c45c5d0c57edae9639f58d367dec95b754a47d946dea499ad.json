{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport store from '../store';\nimport HomeView from '../views/HomeView.vue';\nimport Register from '../views/Register.vue';\nimport Login from '../views/Login.vue';\nimport Dashboard from '../views/dashboard/Dashboard.vue';\nimport MyAccount from \"../views/dashboard/MyAccount.vue\";\nimport Leads from \"../views/dashboard/Leads.vue\";\nimport Lead from \"../views/dashboard/Lead.vue\";\nimport AddLead from \"../views/dashboard/AddLead.vue\";\nconst routes = [{\n  path: \"/\",\n  name: \"home\",\n  component: HomeView\n}, {\n  path: \"/register\",\n  name: \"Register\",\n  component: Register\n}, {\n  path: \"/login\",\n  name: \"Login\",\n  component: Login\n}, {\n  path: \"/dashboard\",\n  name: \"Dashboard\",\n  component: Dashboard,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/dashboard/my-account\",\n  name: \"MyAccount\",\n  component: MyAccount,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/dashboard/leads\",\n  name: \"Leads\",\n  component: Leads,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/dashboard/leads/add\",\n  name: \"AddLead\",\n  component: AddLead,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/dashboard/leads/:id\",\n  name: \"AddLead\",\n  component: AddLead,\n  meta: {\n    requireLogin: true\n  }\n}, {\n  path: \"/about\",\n  name: \"about\",\n  // route level code-splitting\n  // this generates a separate chunk (about.[hash].js) for this route\n  // which is lazy-loaded when the route is visited.\n  component: () => import( /* webpackChunkName: \"about\" */\"../views/AboutView.vue\")\n}];\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n    next('/login');\n  } else {\n    next();\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","store","HomeView","Register","Login","Dashboard","MyAccount","Leads","Lead","AddLead","routes","path","name","component","meta","requireLogin","router","history","process","env","BASE_URL","beforeEach","to","from","next","matched","some","record","state","isAuthenticated"],"sources":["D:/Courses/web-programming-course/homeworks/6-crm/crm_vue/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport store from '../store'\n\nimport HomeView from '../views/HomeView.vue'\n\nimport Register from '../views/Register.vue'\nimport Login from '../views/Login.vue'\nimport Dashboard from '../views/dashboard/Dashboard.vue'\nimport MyAccount from \"../views/dashboard/MyAccount.vue\"\nimport Leads from \"../views/dashboard/Leads.vue\"\nimport Lead from \"../views/dashboard/Lead.vue\"\nimport AddLead from \"../views/dashboard/AddLead.vue\"\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"home\",\n    component: HomeView,\n  },\n  {\n    path: \"/register\",\n    name: \"Register\",\n    component: Register,\n  },\n  {\n    path: \"/login\",\n    name: \"Login\",\n    component: Login,\n  },\n  {\n    path: \"/dashboard\",\n    name: \"Dashboard\",\n    component: Dashboard,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/dashboard/my-account\",\n    name: \"MyAccount\",\n    component: MyAccount,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/dashboard/leads\",\n    name: \"Leads\",\n    component: Leads,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/dashboard/leads/add\",\n    name: \"AddLead\",\n    component: AddLead,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/dashboard/leads/:id\",\n    name: \"AddLead\",\n    component: AddLead,\n    meta: {\n      requireLogin: true,\n    },\n  },\n  {\n    path: \"/about\",\n    name: \"about\",\n    // route level code-splitting\n    // this generates a separate chunk (about.[hash].js) for this route\n    // which is lazy-loaded when the route is visited.\n    component: () =>\n      import(/* webpackChunkName: \"about\" */ \"../views/AboutView.vue\"),\n  },\n]\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n})\n\nrouter.beforeEach((to, from, next) => {\n  if (to.matched.some(record => record.meta.requireLogin) && !store.state.isAuthenticated) {\n    next('/login')\n  } else {\n    next()\n  }\n})\n\nexport default router\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,KAAK,MAAM,UAAU;AAE5B,OAAOC,QAAQ,MAAM,uBAAuB;AAE5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,SAAS,MAAM,kCAAkC;AACxD,OAAOC,KAAK,MAAM,8BAA8B;AAChD,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,OAAOC,OAAO,MAAM,gCAAgC;AAEpD,MAAMC,MAAM,GAAG,CACb;EACEC,IAAI,EAAE,GAAG;EACTC,IAAI,EAAE,MAAM;EACZC,SAAS,EAAEX;AACb,CAAC,EACD;EACES,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,UAAU;EAChBC,SAAS,EAAEV;AACb,CAAC,EACD;EACEQ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAET;AACb,CAAC,EACD;EACEO,IAAI,EAAE,YAAY;EAClBC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAER,SAAS;EACpBS,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,uBAAuB;EAC7BC,IAAI,EAAE,WAAW;EACjBC,SAAS,EAAEP,SAAS;EACpBQ,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,kBAAkB;EACxBC,IAAI,EAAE,OAAO;EACbC,SAAS,EAAEN,KAAK;EAChBO,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEJ,OAAO;EAClBK,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,sBAAsB;EAC5BC,IAAI,EAAE,SAAS;EACfC,SAAS,EAAEJ,OAAO;EAClBK,IAAI,EAAE;IACJC,YAAY,EAAE;EAChB;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,QAAQ;EACdC,IAAI,EAAE,OAAO;EACb;EACA;EACA;EACAC,SAAS,EAAEA,CAAA,KACT,MAAM,EAAC,+BAAgC,wBAAwB;AACnE,CAAC,CACF;AAED,MAAMG,MAAM,GAAGjB,YAAY,CAAC;EAC1BkB,OAAO,EAAEjB,gBAAgB,CAACkB,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CV;AACF,CAAC,CAAC;AAEFM,MAAM,CAACK,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EACpC,IAAIF,EAAE,CAACG,OAAO,CAACC,IAAI,CAACC,MAAM,IAAIA,MAAM,CAACb,IAAI,CAACC,YAAY,CAAC,IAAI,CAACd,KAAK,CAAC2B,KAAK,CAACC,eAAe,EAAE;IACvFL,IAAI,CAAC,QAAQ,CAAC;EAChB,CAAC,MAAM;IACLA,IAAI,CAAC,CAAC;EACR;AACF,CAAC,CAAC;AAEF,eAAeR,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}