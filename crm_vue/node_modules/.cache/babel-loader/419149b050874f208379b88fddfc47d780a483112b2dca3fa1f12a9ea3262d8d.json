{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'Leads',\n  data() {\n    return {\n      leads: [],\n      showNextButton: false,\n      showPreviousButton: false,\n      currentPage: 1\n    };\n  },\n  mounted() {\n    this.getLeads();\n  },\n  methods: {\n    goToNextPage() {\n      this.currentPage += 1;\n      this.getLeads();\n    },\n    goToPreviousPage() {\n      this.currentPage -= 1;\n      this.getLeads();\n    },\n    async getLeads() {\n      this.$store.commit('setIsLoading', true);\n      this.showNextButton = false;\n      this.showPreviousButton = false;\n      await axios.get(`/api/v1/leads/?page=${this.currentPage}`).then(response => {\n        console.log('lead response from server', response.data);\n        this.leads = response.data.results;\n        if (response.data.next) {\n          this.showNextButton = true;\n        }\n        if (response.data.previous) {\n          this.showPreviousButton = true;\n        }\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","leads","showNextButton","showPreviousButton","currentPage","mounted","getLeads","methods","goToNextPage","goToPreviousPage","$store","commit","get","then","response","console","log","results","next","previous","catch","error"],"sources":["D:\\Courses\\web-programming-course\\homeworks\\6-crm\\crm_vue\\src\\views\\dashboard\\Leads.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Leads</h1>\r\n\r\n        <router-link to=\"/dashboard/leads/add\">Add lead</router-link>\r\n\r\n        <hr>\r\n        <form>\r\n          <div class=\"field has-addons\">\r\n            <div class=\"control\">\r\n              <input class=\"input\" type=\"text\" placeholder=\"Find a lead\">\r\n            </div>\r\n            <div class=\"control\">\r\n              <a class=\"button is-info\">\r\n                Search\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      <div class=\"column is-12\">\r\n        <table class=\"table is-fullwidth\">\r\n          <thead>\r\n            <tr>\r\n              <th>Company</th>\r\n              <th>Contact person</th>\r\n              <th>Assigned to</th>\r\n              <th>Status</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            <tr v-for=\"lead in leads\" :key=\"lead.id\">\r\n              <td>{{ lead.company }}</td>\r\n              <td>{{ lead.contact_person }}</td>\r\n              <td>\r\n                <template v-if=\"lead.assigned_to\">{{ lead.assigned_to.first_name }} {{ lead.assigned_to.last_name\r\n                }}</template>\r\n              </td>\r\n              <td>{{ lead.status }}</td>\r\n              <td>\r\n                <router-link :to=\"{ name: 'Lead', params: { id: lead.id } }\">Details</router-link>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n\r\n        <div class=\"buttons pagination is-centered\">\r\n          <button class=\"button pagination-previous is-light\" v-if=\"showPreviousButton\"\r\n            @click=\"goToPreviousPage()\">Previous</button>\r\n          <button class=\"button pagination-next is-light\" v-if=\"showNextButton\" @click=\"goToNextPage()\">Next</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'Leads',\r\n  data() {\r\n    return {\r\n      leads: [],\r\n      showNextButton: false,\r\n      showPreviousButton: false,\r\n      currentPage: 1\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getLeads()\r\n  },\r\n  methods: {\r\n    goToNextPage() {\r\n      this.currentPage += 1\r\n      this.getLeads()\r\n    },\r\n    goToPreviousPage() {\r\n      this.currentPage -= 1\r\n      this.getLeads()\r\n    },\r\n    async getLeads() {\r\n      this.$store.commit('setIsLoading', true)\r\n      this.showNextButton = false\r\n      this.showPreviousButton = false\r\n      \r\n      await axios.get(`/api/v1/leads/?page=${this.currentPage}`).then(response => {\r\n        console.log('lead response from server',response.data);\r\n        this.leads = response.data.results\r\n\r\n        if (response.data.next) {\r\n          this.showNextButton = true\r\n        }\r\n        if (response.data.previous) {\r\n          this.showPreviousButton = true\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n\r\n      this.$store.commit('setIsLoading', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"mappings":"AA8DA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,OAAO;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,cAAc,EAAE,KAAK;MACrBC,kBAAkB,EAAE,KAAK;MACzBC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACPC,YAAYA,CAAA,EAAG;MACb,IAAI,CAACJ,WAAU,IAAK;MACpB,IAAI,CAACE,QAAQ,CAAC;IAChB,CAAC;IACDG,gBAAgBA,CAAA,EAAG;MACjB,IAAI,CAACL,WAAU,IAAK;MACpB,IAAI,CAACE,QAAQ,CAAC;IAChB,CAAC;IACD,MAAMA,QAAQA,CAAA,EAAG;MACf,IAAI,CAACI,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI;MACvC,IAAI,CAACT,cAAa,GAAI,KAAI;MAC1B,IAAI,CAACC,kBAAiB,GAAI,KAAI;MAE9B,MAAML,KAAK,CAACc,GAAG,CAAE,uBAAsB,IAAI,CAACR,WAAY,EAAC,CAAC,CAACS,IAAI,CAACC,QAAO,IAAK;QAC1EC,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAACF,QAAQ,CAACd,IAAI,CAAC;QACtD,IAAI,CAACC,KAAI,GAAIa,QAAQ,CAACd,IAAI,CAACiB,OAAM;QAEjC,IAAIH,QAAQ,CAACd,IAAI,CAACkB,IAAI,EAAE;UACtB,IAAI,CAAChB,cAAa,GAAI,IAAG;QAC3B;QACA,IAAIY,QAAQ,CAACd,IAAI,CAACmB,QAAQ,EAAE;UAC1B,IAAI,CAAChB,kBAAiB,GAAI,IAAG;QAC/B;MACF,CAAC,EACAiB,KAAK,CAACC,KAAI,IAAK;QACdN,OAAO,CAACC,GAAG,CAACK,KAAK,CAAC;MACpB,CAAC;MAED,IAAI,CAACX,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK;IAC1C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}