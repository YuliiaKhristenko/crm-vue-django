{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport { toast } from 'bulma-toast';\nexport default {\n  name: 'EditNote',\n  data() {\n    return {\n      note: {}\n    };\n  },\n  mounted() {\n    this.getNote();\n  },\n  methods: {\n    async getNote() {\n      this.$store.commit('setIsLoading', true);\n      const noteID = this.$route.params.note_id;\n      const clientID = this.$route.params.id;\n      await axios.get(`/api/v1/notes/${noteID}/?client_id=${clientID}`).then(response => {\n        this.note = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    },\n    async submitForm() {\n      this.$store.commit('setIsLoading', true);\n      await axios.patch(`/api/v1/notes/${this.note.id}/?client_id=${clientID}`, this.note).then(response => {\n        toast({\n          message: 'The note was updated',\n          type: 'is-success',\n          dismissible: true,\n          pauseOnHover: true,\n          duration: 4000,\n          position: 'top-right'\n        });\n        this.$router.push({\n          name: 'Client',\n          params: {\n            id: this.$route.params.id\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n      this.$store.commit('setIsLoading', false);\n    }\n  }\n};","map":{"version":3,"names":["axios","toast","name","data","note","mounted","getNote","methods","$store","commit","noteID","$route","params","note_id","clientID","id","get","then","response","catch","error","console","log","submitForm","patch","message","type","dismissible","pauseOnHover","duration","position","$router","push"],"sources":["D:\\Courses\\web-programming-course\\homeworks\\6-crm\\crm_vue\\src\\views\\dashboard\\EditNote.vue"],"sourcesContent":["<template>\r\n  <div class=\"container\">\r\n    <div class=\"columns is-multiline\">\r\n      <div class=\"column is-12\">\r\n        <h1 class=\"title\">Edit note</h1>\r\n      </div>\r\n\r\n      <div class=\"column is-12\">\r\n        <form @submit.prevent=\"submitForm\">\r\n\r\n          <div class=\"field\">\r\n            <label class=\"label\">Name</label>\r\n            <div class=\"control\">\r\n              <input type=\"text\" class=\"input\" placeholder=\"Note title\" v-model=\"note.name\">\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"field\">\r\n            <label class=\"label\">Body</label>\r\n            <div class=\"control\">\r\n              <textarea class=\"textarea\" v-model=\"note.body\"></textarea>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"field\">\r\n            <div class=\"control\">\r\n              <button class=\"button is-success is-medium\">Update</button>\r\n            </div>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { toast } from 'bulma-toast'\r\n\r\nexport default {\r\n  name: 'EditNote',\r\n  data() {\r\n    return {\r\n      note: {}\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getNote()\r\n  },\r\n  methods: {\r\n    async getNote() {\r\n      this.$store.commit('setIsLoading', true)\r\n\r\n      const noteID = this.$route.params.note_id\r\n      const clientID = this.$route.params.id\r\n\r\n      await axios.get(`/api/v1/notes/${noteID}/?client_id=${clientID}`).then(response => {\r\n        this.note = response.data\r\n      })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n\r\n      this.$store.commit('setIsLoading', false)\r\n    },\r\n    async submitForm() {\r\n      this.$store.commit('setIsLoading', true)\r\n\r\n      await axios.patch(`/api/v1/notes/${this.note.id}/?client_id=${clientID}`, this.note).then(response => {\r\n        toast({\r\n          message: 'The note was updated',\r\n          type: 'is-success',\r\n          dismissible: true,\r\n          pauseOnHover: true,\r\n          duration: 4000,\r\n          position: 'top-right'\r\n        })\r\n\r\n        this.$router.push({ name: 'Client', params: { id: this.$route.params.id } })\r\n      })\r\n        .catch(error => {\r\n          console.log(error);\r\n        })\r\n      this.$store.commit('setIsLoading', false)\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>"],"mappings":";AAqCA,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,KAAI,QAAS,aAAY;AAElC,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CAAC;IACT;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,OAAO,CAAC;EACf,CAAC;EACDC,OAAO,EAAE;IACP,MAAMD,OAAOA,CAAA,EAAG;MACd,IAAI,CAACE,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI;MAEvC,MAAMC,MAAK,GAAI,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,OAAM;MACxC,MAAMC,QAAO,GAAI,IAAI,CAACH,MAAM,CAACC,MAAM,CAACG,EAAC;MAErC,MAAMf,KAAK,CAACgB,GAAG,CAAE,iBAAgBN,MAAO,eAAcI,QAAS,EAAC,CAAC,CAACG,IAAI,CAACC,QAAO,IAAK;QACjF,IAAI,CAACd,IAAG,GAAIc,QAAQ,CAACf,IAAG;MAC1B,CAAC,EACEgB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MAEH,IAAI,CAACZ,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK;IAC1C,CAAC;IACD,MAAMc,UAAUA,CAAA,EAAG;MACjB,IAAI,CAACf,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,IAAI;MAEvC,MAAMT,KAAK,CAACwB,KAAK,CAAE,iBAAgB,IAAI,CAACpB,IAAI,CAACW,EAAG,eAAcD,QAAS,EAAC,EAAE,IAAI,CAACV,IAAI,CAAC,CAACa,IAAI,CAACC,QAAO,IAAK;QACpGjB,KAAK,CAAC;UACJwB,OAAO,EAAE,sBAAsB;UAC/BC,IAAI,EAAE,YAAY;UAClBC,WAAW,EAAE,IAAI;UACjBC,YAAY,EAAE,IAAI;UAClBC,QAAQ,EAAE,IAAI;UACdC,QAAQ,EAAE;QACZ,CAAC;QAED,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC;UAAE9B,IAAI,EAAE,QAAQ;UAAEU,MAAM,EAAE;YAAEG,EAAE,EAAE,IAAI,CAACJ,MAAM,CAACC,MAAM,CAACG;UAAG;QAAE,CAAC;MAC7E,CAAC,EACEI,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB,CAAC;MACH,IAAI,CAACZ,MAAM,CAACC,MAAM,CAAC,cAAc,EAAE,KAAK;IAC1C;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}